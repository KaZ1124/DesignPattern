\contentsline {section}{\numberline {1}Iteratorパターン}{3}
\contentsline {subsection}{\numberline {1.1}概要}{3}
\contentsline {subsection}{\numberline {1.2}例}{3}
\contentsline {subsection}{\numberline {1.3}考察}{3}
\contentsline {subsection}{\numberline {1.4}疑問点}{4}
\contentsline {section}{\numberline {2}Adapterパターン}{5}
\contentsline {subsection}{\numberline {2.1}概要}{5}
\contentsline {subsubsection}{\numberline {2.1.1}継承を用いる実現方法}{5}
\contentsline {subsubsection}{\numberline {2.1.2}委譲を用いる実現方法}{5}
\contentsline {subsection}{\numberline {2.2}例}{5}
\contentsline {subsection}{\numberline {2.3}考察}{6}
\contentsline {subsection}{\numberline {2.4}疑問点}{6}
\contentsline {subsubsection}{\numberline {2.4.1}Adapterの使用範囲}{6}
\contentsline {subsubsection}{\numberline {2.4.2}TargetとAdapterを分ける理由}{7}
\contentsline {section}{\numberline {3}Template Methodパターン}{8}
\contentsline {subsection}{\numberline {3.1}概要}{8}
\contentsline {subsection}{\numberline {3.2}例}{8}
\contentsline {subsection}{\numberline {3.3}考察}{8}
\contentsline {subsection}{\numberline {3.4}疑問点}{8}
\contentsline {section}{\numberline {4}FactoryMethodパターン}{10}
\contentsline {subsection}{\numberline {4.1}概要}{10}
\contentsline {subsection}{\numberline {4.2}例}{10}
\contentsline {subsection}{\numberline {4.3}考察}{10}
\contentsline {subsection}{\numberline {4.4}疑問点}{11}
\contentsline {subsubsection}{\numberline {4.4.1}製品クラスの設計}{11}
\contentsline {section}{\numberline {5}Singletonパターン}{12}
\contentsline {subsection}{\numberline {5.1}概要}{12}
\contentsline {subsection}{\numberline {5.2}例}{12}
\contentsline {subsection}{\numberline {5.3}考察}{12}
\contentsline {subsection}{\numberline {5.4}疑問点}{12}
\contentsline {subsubsection}{\numberline {5.4.1}静的クラスとの使い分け}{12}
